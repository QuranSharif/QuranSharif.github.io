{"version":3,"sources":["images/play-button.svg","images/pause-button.svg","components/HomePage.js","components/SurahList.js","components/Ayah.js","components/Ayahs.js","components/Surah.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HomePage","react_default","a","createElement","className","Link","to","alt","src","PlayBtn","PauseBtn","SurahList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getSurahList","asyncToGenerator","regenerator_default","mark","_callee","_ref2","surahList","wrap","_context","prev","next","axios","sent","data","setState","stop","state","window","_this2","map","oneSurah","index","key","number","concat","onClick","handleSurah","parseInt","surahNumber","name","englishName","numberOfAyahs","revelationType","Component","Ayah","_this$props","ayah","surah_ar","surah_en","surah_rm","handleAudio","surah_bn","numberInSurah","verse","ayahs","text","juz","manzil","page","ruku","sajda","Ayahs","ayahNum","audio","Audio","preload","play","handleAllAudio","startAyahFrom","start","end","playAudio","onended","englishNameTranslation","components_Ayah","Surah","getSurah","_ref","_ref3","_ref4","_ref5","_x","apply","arguments","match","params","_this$state","components_SurahList","components_Ayahs","App","BrowserRouter","Route","exact","path","component","render","components_Surah","Boolean","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7cc575b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play-button.ddf58f90.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause-button.1850dbca.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport PlayBtn from '../images/play-button.svg';\r\nimport PauseBtn from '../images/pause-button.svg';\r\n\r\nexport default () => (\r\n  <div className=\"home\">\r\n    <div className=\"menu\">\r\n      <div className=\"start-title\">\r\n        <p className=\"ar\">بِسْمِ اللَّهِ الرَّحْمَنِ الرَّحِيم</p>\r\n        <p className=\"bn\">বিসমিল্লাহির রাহমানির রাহিম</p>\r\n      </div>\r\n      <div className=\"title\">\r\n        <h2 className=\"ar\">القرآن‎</h2>\r\n        <h4 className=\"bn\">কুরআন শরীফ</h4>\r\n      </div>\r\n      <div className=\"action\">\r\n        <Link to=\"/surah/1\" className=\"btn\"><img alt=\"Start From Beginning\" src={PlayBtn} /></Link>\r\n        <Link to=\"https://zonayed.me\" className=\"btn\"><img alt=\"Resume\" src={PauseBtn} /></Link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass SurahList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      surahList: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.axios = axios;\r\n    this.getSurahList();\r\n  }\r\n\r\n  getSurahList = async () => {\r\n    const { data: { data: surahList } } = await axios('http://api.alquran.cloud/surah');\r\n    this.setState({ surahList });\r\n  }\r\n\r\n  render() {\r\n    const { surahList } = this.state;\r\n    return (\r\n      <div className=\"surah-list\">\r\n        <div className=\"list\">\r\n          <ul>\r\n            {surahList && surahList.map((oneSurah, index) => (\r\n              <Link key={oneSurah.number} to={`/surah/${oneSurah.number}`}>\r\n                <li onClick={() => this.props.handleSurah(oneSurah.number)} className={`surah-all ${parseInt(this.props.surahNumber) === oneSurah.number && 'surah-active'}`}>\r\n                  <div className=\"surah-number\">\r\n                    <p>{index + 1}</p>\r\n                  </div>\r\n                  <div className=\"surah-details\">\r\n                    <p className=\"ar\">{oneSurah.name}</p>\r\n                    <p>{oneSurah.englishName}</p>\r\n                    <ul className=\"surah-info\">\r\n                      <li>{oneSurah.numberOfAyahs}</li>\r\n                      <li>{oneSurah.revelationType}</li>\r\n                    </ul>\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SurahList;\r\n","import React, { Component } from 'react';\r\n\r\nclass Ayah extends Component {\r\n  render() {\r\n    const { ayah, index, surah_ar, surah_en, surah_rm, surah_bn, handleAudio } = this.props;\r\n\r\n    return (\r\n      <li>\r\n        <div className=\"ayah-number\">\r\n          <p className=\"number\">{ayah.numberInSurah}</p>\r\n        </div>\r\n        <div className=\"ayah-tr\">\r\n          <p className=\"ar\">{surah_ar.verse[`verse_${index + 1}`]}</p>\r\n          <p className=\"rm\">{surah_rm.ayahs[index % 7].text}</p>\r\n          <p>{surah_en.verse[`verse_${index + 1}`]}</p>\r\n          <p>{ayah.text}</p>\r\n        </div>\r\n        <div className=\"ayah-audio\">\r\n          <p onClick={() => handleAudio(ayah.number)}>▶</p>\r\n        </div>\r\n        <ul className=\"ayah-info\">\r\n          <li>Juz: {ayah.juz}</li>\r\n          <li>Manzil: {ayah.manzil}</li>\r\n          <li>Number: {ayah.number}</li>\r\n          <li>Page: {ayah.page}</li>\r\n          <li>Ruku: {ayah.ruku}</li>\r\n          {ayah.sajda && <li className=\"sajda\">Sajda</li>}\r\n        </ul>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Ayah;\r\n","import React, { Component } from 'react';\r\n\r\nimport Ayah from './Ayah';\r\n\r\nclass Ayahs extends Component {\r\n  handleAudio = ayahNum => {\r\n    const audio = new Audio(`https://cdn.alquran.cloud/media/audio/ayah/ar.alafasy/${ayahNum}/high`);\r\n    audio.preload = 'none';\r\n    audio.play();\r\n    return audio;\r\n  }\r\n\r\n  handleAllAudio = (ayahNum, startAyahFrom) => {\r\n    let start = startAyahFrom;\r\n    const end = startAyahFrom + (ayahNum - 1);\r\n    const playAudio = () => {\r\n      if(start > end) {\r\n        return true;\r\n      }\r\n      const audio = this.handleAudio(start);\r\n      audio.onended = () => {\r\n        start++;\r\n        playAudio();\r\n      };\r\n    }\r\n    playAudio();\r\n  }\r\n\r\n  render() {\r\n    const { surah_ar, surah_rm, surah_en, surah_bn } = this.props;\r\n\r\n    return (\r\n      <div className=\"surah-content\">\r\n        {!surah_bn ? 'Loading' :\r\n        <ul>\r\n          <li className=\"ar surah-start\">بِسْمِ اللَّهِ الرَّحْمَٰنِ الرَّحِيمِ</li>\r\n          <li className=\"surah-head\">\r\n            <h3 className=\"ar surah-title\">{surah_bn.name}</h3>\r\n            <h4>{surah_bn.englishName}</h4>\r\n            <p>{surah_bn.englishNameTranslation}</p>\r\n          </li>\r\n          <li className=\"all-audio\" onClick={() => this.handleAllAudio(surah_ar.numberOfAyahs, surah_ar.ayahs[0].number)}>▶ Play All</li>\r\n          {surah_bn.ayahs.map((ayah, index) => (\r\n            <Ayah key={ayah.number} ayah={ayah} index={index} surah_ar={surah_ar} surah_rm={surah_rm} surah_en={surah_en} surah_bn={surah_bn} handleAudio={this.handleAudio} />\r\n          ))}\r\n        </ul>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Ayahs;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport SurahList from './SurahList';\r\nimport Ayahs from './Ayahs';\r\n\r\nclass Surah extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      surah_ar: '',\r\n      surah_rm: '',\r\n      surah_en: '',\r\n      surah_bn: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getSurah(this.props.match.params.number);\r\n  }\r\n\r\n  getSurah = async (number) => {\r\n    this.setState({surah_ar: null, surah_rm: null, surah_en: null, surah_bn: null});\r\n    const { data: { data: surah_bn } } = await axios(`http://api.alquran.cloud/surah/${number}/bn.bengali`);\r\n    const { data: surah_ar } = await axios(`https://raw.githubusercontent.com/semarketir/quranjson/master/source/surah/surah_${number}.json`);\r\n    const { data: { data: surah_rm } } = await axios(`https://raw.githubusercontent.com/QuranSharif/QuranSharif-API/master/surah/1/roman.script.json`);\r\n    const { data: surah_en } = await axios(`https://raw.githubusercontent.com/semarketir/quranjson/master/source/translation/en/en_translation_${number}.json`);\r\n    this.setState({ surah_ar, surah_rm, surah_en, surah_bn });\r\n  }\r\n\r\n  render() {\r\n    const { surah_ar, surah_rm, surah_en, surah_bn } = this.state;\r\n    return (\r\n      <div className=\"surah\">\r\n        <SurahList handleSurah={this.getSurah} surahNumber={this.props.match.params.number} />\r\n        <Ayahs surah_ar={surah_ar} surah_rm={surah_rm} surah_en={surah_en} surah_bn={surah_bn} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Surah;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport './App.css';\n\nimport HomePage from './components/HomePage';\nimport Surah from './components/Surah';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/surah/:number\" render={(props) => <Surah {...props} />} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}